#!/usr/bin/env python
import subprocess
import sys
import argparse

#-------------Send the Data By using the Arg parse Library--------------------------------------------------------------------------------------
parse = argparse.ArgumentParser(description="Deploying the Scripts on CDN")
parse.add_argument("-o", dest="origin",help='server from which content would be fetched')
parse.add_argument("-p", dest="port",help='high-numbered port 40000-65535',type=int)
parse.add_argument("-i", dest="keyfile",help='keyfile for ssh')
parse.add_argument("-u", dest="username",help='user who runs this script')
parse.add_argument("-n", dest="name",help='cdn specific name')

args = parse.parse_args()

if args.origin is None:
        print 'enter correct origin'
        sys.exit()
origin = args.origin


if args.port is None:
	print 'enter correct port number'
	sys.exit()
port = int(args.port)

if args.username is None:
        print 'enter correct username'
        sys.exit()
username = args.username

if args.name is None:
        print 'enter correct CDN name'
        sys.exit()
name = args.name

replica_servers = ['ec2-54-210-1-206.compute-1.amazonaws.com',
                    'ec2-54-67-25-76.us-west-1.compute.amazonaws.com',
                    'ec2-35-161-203-105.us-west-2.compute.amazonaws.com',
                    'ec2-52-213-13-179.eu-west-1.compute.amazonaws.com',
                    'ec2-35-156-54-135.eu-central-1.compute.amazonaws.com',
                    'ec2-52-196-161-198.ap-northeast-1.compute.amazonaws.com',
                    'ec2-54-255-148-115.ap-southeast-1.compute.amazonaws.com',
                    'ec2-13-54-30-86.ap-southeast-2.compute.amazonaws.com',
                    'ec2-52-67-177-90.sa-east-1.compute.amazonaws.com']

dns_servers = ['cs5700cdnproject.ccs.neu.edu']


if args.keyfile is None:
        print 'enter correct keyfile'
        sys.exit()
password = args.keyfile

#This is for HTTP Server

for replica in replica_servers:

	#Makes Works all the http servers wherever the httpserver script is Deployed
	http_work =("ssh -i"+password+" "+username+"@"+replica+" '"+"DISPLAY=:0 ./httpserver -p "+str(port)+" -o "+origin+"< /dev/null > std.out 2> std.err &"+"'")
	subprocess.call(http_work, shell=True)

#This is For DNS Server

for server in dns_servers:
	# run the DNS at server -------------------------------------------------
        dns_var = ("ssh -i"+password+" "+username+"@"+server+" '"+"DISPLAY=:0 ./dnsserver -p "+str(port)+" -n "+name+"< /dev/null > std.out 2> std.err &"+"'")
        subprocess.call(dns_var, shell =True)

#End of Code
